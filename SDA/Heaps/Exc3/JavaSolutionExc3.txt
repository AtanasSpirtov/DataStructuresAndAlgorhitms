
import java.util.*;

public class Solution {

    static class Student implements Comparable<Student> {
        int submitTime;
        int linesCode;

        public Student(int submitTime, int linesCode) {
            this.submitTime = submitTime;
            this.linesCode = linesCode;
        }

        @Override
        public int compareTo(Student o) {
            if (this.linesCode > o.linesCode) {
                return this.submitTime;
            } else
                return -1;
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        Student[] students = new Student[n];

        for (int i = 0; i < n; i++) {
            students[i] = new Student(scanner.nextInt(), scanner.nextInt());
        }

        Arrays.sort(students, Comparator.comparingInt(o -> o.submitTime));

        Queue<Student> waitTime = new PriorityQueue<>();
        long currentTime = 0L;
        long totalWaitTime = 0L;
        int index = 0;

        while (!waitTime.isEmpty() || index < students.length) {
            while (index < students.length && students[index].submitTime <= currentTime) {
                waitTime.add(students[index]);
                index++;
            }
            if (waitTime.isEmpty()) {
                currentTime = students[index].submitTime;
                continue;
            }

            Student finished = waitTime.poll();
            currentTime += finished.linesCode;
            totalWaitTime += currentTime - finished.submitTime;
        }

        System.out.println(totalWaitTime / students.length);
    }
}
#include <iostream>
#include <algorithm>
using namespace std;

 long long search(long long* a , long long l,long long r,long long value) {

    if (value < a[0]) {
        return a[0];
    }
    if (value > a[r]) {
        return a[r];
    }

    long long lo = 0;
    long long hi = r;

    while (lo <= hi) {
        long long mid = (hi + lo) / 2;

        if (value < a[mid]) {
            hi = mid - 1;
        }
        else if (value > a[mid]) {
            lo = mid + 1;
        }
        else {
            return a[mid];
        }
    }
    return (a[lo] - value) < (value - a[hi]) ? a[lo] : a[hi];
}

int main()
{
    long long topic;
    long long teams;
    cin >> topic >> teams;
    long long* allTopic = new long long[topic];
    long long* allTeams = new long long[teams];
    for (int i = 0; i < topic; i++)
    {
        cin >> allTopic[i];
    }
    for (long long i = 0; i < teams; i++)
    {
        cin >> allTeams[i];
    }
    sort(allTopic , allTopic + topic);
    for (long long i = 0; i < teams; i++)
    {
        cout << search(allTopic,0 , topic - 1, allTeams[i]) << endl;
    }
}